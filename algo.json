{
    "Algorithms" : {
        "":"",
        "lire()": "input()"  ,
        "ecrire()" : "print()"  ,
        "<-" : "=",
        "alors" : ":" ,
        "faire" : ":" ,
        "si" : "if",
        "valeur" : "float or int",
        "entier" : "int()",
        "entier()" : "int()",
        "reel" : "float()",
        "chaine de caracteres" : "string",
        "afficher" : "print()",
        "booleen" : "bool",
        "faux" : "False",
        "vrai" : "True",
        "texte" : "" ,
        "None":"",
        "div" :"//",
        "mod" : "%" ,
        "convch()" : "str()",
        "=" : "==",
        ">=":">=",
        "<=":"<=",
        "!=":"!=",
        "non" : "not",
        "et" : "and" , 
        "ou" : "or",
        "abs" : "abs(x)",
        "arrondi()" : "round(x)",
        "alea" : "randint(i,f)" ,
        "racine" : "sqrt(x)",
        "long": "len(Ch)",
        "pos" : "find()",
        "sous chaine" : "ch[d , f]",
        "effacer": "ch2 = ch1[:d] + ch1[f:] ",
        "majus": "ch.upper()",
        "estnum" : "isnumeric()",
        "different": "!=",
        "tab" : "import numpy as np \nnom_tableau = np.array([Type_element()] * N )   #N entier"  ,
        "tableau" : "import numpy as np \nnom_tableau = np.array([Type_element()] * N )   #N entier"  ,
        "boucle pour" : "for i in range(N)",
        "pour" : "for i in range(N)",
        "pour i de vi a vf faire" : "for i in range(N)",
        "repeter": "while condition:\n\ttrait ",
        "tant que" : "while condition:\n\ttrait ",
        "jusqu'a" : "",
        "fonction" : "def",
        "retourner" : "return",
        "procedeur" : "def",
        "tableau avec sous programme" :"",
        "sous programme" : "fonction ou procedeur"
        ,
        "hashtag":"click 'alt gr + 3'",
        "ord()":"ord(ca)",
        "chr()":"chr(X)",
        "qt_designer": ""
    }
}