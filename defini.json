{
    "Algorithms_def" : {
        "":"",
        "lire()": ""  ,
        "ecrire()" : ""  ,
        "<-" : "Objet1 et Objet2 doivent etre de meme type ou de types compatibles.",
        "alors" : "" ,
        "faire" : "" ,
        "si" : "",
        "valeur" : "Retourne la conversion d'une chaine Ch\nen une valeur numerique, si c'est possible.",
        "entier" : "Retourne un Entier representant la partie entiere de X.",
        "entier()" : "Retourne un Entier representant la partie entiere de X.",
        "reel" : "",
        "chaine de caracteres" : "",
        "afficher" : "print('commentaiure')",
        "booleen" : "",
        "faux" : "",
        "vrai" : "",
        "texte" : "" ,
        "None":"aucune",
        "div" :" Les operateurs arithmetiques et logiques : **Division entiere**\nType d'operande:\nEntier",
        "mod" : "Les operateurs arithmetiques et logiques :**Reste de la division entiere**\nType d'operande\nEntier" ,
        "convch()" : "Retourne la conversion du nombre X en une chaine de caracteres.",
        "=" : "",
        ">=":"Les operateurs arithmetiques et logiques :**Superieur ou egal**\nType d'operande:\nTout Type ordonne",
        "<=":"Les operateurs arithmetiques et logiques :**Inferieur ou egal**\nType d'operande:\nTout Type ordonne",
        "!=":"Les opérateurs arithmetiques et logiques :**Différent**\nType d'operande\nTout Type ordonne",
        "non" : "Les operateurs arithmetiques et logiques :**Negation**\nType d'operande",
        "et" : "Les operateurs arithmetiques et logiques :**Conjonction**\nType d'operande" , 
        "ou" : "Les operateurs arithmetiques et logiques :**Disjonction**\nType d'operande",
        "abs" : "Retourne la valeur absolue de X",
        "arrondi()" : "Retourne l'Entier le plus proche de X.",
        "alea" : "Retourne un entier d'une facon aleatoire et automatique de l'intervalle [Vi , Vf ]." ,
        "racine" : "Retourne un Reel representant la racine carree de X.\nSi X < 0, elle provoque une erreur.",
        "long": "Retourne un entier representant le nombre de caracteres de la chaine Ch (la longueur de Ch). ",
        "pos" : "Retourne un entier representant la position de la 1ère occurrence de Ch1 dans Ch2. Elle retourne -1 si Ch1 n'existe pas dans Ch2.",
        "sous chaine" : "Retourne une copie de la chaine Ch1 à partir de l'indice Debut à l'indice Fin (position Fin exclu).",
        "effacer": "Retourne une chaine Ch2 apres avoir effacer, de la chaine Ch1, les caracteres de la position d a la position f (f exclu).",
        "majus": "Retourne la chaine ChM representant la conversion en Majuscule de la chaine Ch.",
        "estnum" : "Retourne VRAI si la chaine Ch est convertible en une valeur numerique et FAUX dans le cas contraire.",
        "different": "Les opérateurs arithmétiques et logiques :!=",
        "tab" : "import numpy as np \nnom_tableau = np.array([Type_element()] * N )   #N entier"  ,
        "tableau" : "import numpy as np \nnom_tableau = np.array([Type_element()] * N )   #N entier"  ,
        "boucle pour" : "Remarques :\nLe nombre de repetitions est connu avant le traitement et il est egal a |Fin - Debut |+ 1.\nLe Pas peut etre Positif ou Negatif.\nPar defaut, le Pas est egal a 1.\nIl faut eviter de modifier la valeur du compteur de la\nboucle Pour... Faire... au niveau du traitement.        ",
        "pour" : "Remarques :\nLe nombre de repetitions est connu avant le traitement et il est egal a |Fin - Debut |+ 1.\nLe Pas peut etre Positif ou Negatif.\nPar defaut, le Pas est egal a 1.\nIl faut eviter de modifier la valeur du compteur de la\nboucle Pour... Faire... au niveau du traitement."        ,
        "pour i de vi a vf faire" : "Remarques :\nLe nombre de repetitions est connu avant le traitement et il est egal a |Fin - Debut |+ 1.\nLe Pas peut etre Positif ou Negatif.\nPar defaut, le Pas est egal a 1.\nIl faut eviter de modifier la valeur du compteur de la\nboucle Pour... Faire... au niveau du traitement.        ",
        "repeter": "Remarque : Le nombre de repetitions n'est pas connu a l'avance et le traitement se fait au moins une fois.",
        "tant que" : "Remarque : Le nombre de repetitions n'est pas connu a l'avance et le traitement se fait au moins une fois.",
        "jusqu'a" : "",
        "fonction" : "La fonction retourne un seul resultat (Entier, Reel, Booleen, Caractere ou Chaine de caractères).\nLes parametres effectifs (Pe1 a Pen) et les paramètres formels (Pf1 a Pfn) doivent s'accorder de point de \nvue ordre, nombre et type.\nL'appel d'une fonction est une expression.",
        "retourner" : "retourner Resultat",
        "procedeur" : "Les parametres effectifs (Pe1 a Pen) et les parametres formels (Pf1 a Pfn)\ndoivent s'accorder de point de vue ordre,\nnombre et type.",
        "tableau avec sous programme" :"look example ",
        "sous programme" : "fonction ou procedeur",
        "hashtag":"diese-clavier-windows1.webp",
        "ord()":"Retourne le code ASCII du caractere Ca.",
        "chr()":"Retourne le Caractere dont le code ASCII est X.",
        "qt_designer":""
        
    }
}